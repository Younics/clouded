@page "/management/machines"
@using Clouded.Auth.Provider.Options
@using Clouded.Auth.Provider.DataSources.Interfaces
@using Clouded.Auth.Provider.Dictionaries
@using Clouded.Core.DataSource.Shared
@using Clouded.Core.DataSource.Shared.Extensions
@inject ApplicationOptions Options 
@inject NavigationManager NavigationManager
@inject IMachineDataSource MachineDataSource

<MudText Typo="Typo.h2">Machines</MudText>
<div Class="d-flex justify-end pb-6">
    <MudButton
        StartIcon="@Icons.Material.Filled.Add"
        OnClick="Create"
        ButtonType="ButtonType.Submit"
        Variant="Variant.Filled"
        Color="Color.Tertiary">
        Create new machine
    </MudButton>
</div>

<MudTable
    @ref="_tableReference"
    T="MachineDictionary"
    ServerData="@(new Func<TableState, Task<TableData<MachineDictionary>>>(LoadData))"
    OnRowClick="RowClick"
    Class="py-1 px-2"
    Hover="true">
    <ToolBarContent>
        <MudGrid
            Spacing="1"
            Justify="Justify.SpaceBetween"
            Class="flex-1 align-center rounded mud-background"
            style="margin: 0 -8px 0 -16px">
            <MudItem Class="d-flex align-center ml-2">
                <MudIcon Icon="@Icons.Material.Outlined.TableChart"/>
                <MudText Class="px-4" Typo="Typo.h6">Records</MudText>
            </MudItem>
                <MudItem xs="6">
                    <MudStack Row="@true" AlignItems="AlignItems.Center" Class="ml-auto">
                        <MudTextField
                            T="string"
                            Margin="Margin.Dense"
                            Variant="Variant.Outlined"
                            Placeholder="Search"
                            Adornment="Adornment.Start"
                            AdornmentIcon="@Icons.Material.Filled.Search"
                            IconSize="Size.Medium"
                            Class="mt-0 mr-2"
                            Immediate="true"
                            ValueChanged="@OnSearch"/>

                        <ListFilter Value="_filterValues" ValueChanged="OnValueChange" Columns="@_filterableColumns"/>
                    </MudStack>
                </MudItem>
        </MudGrid>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel
                T="MachineDictionary"
                SortLabel="@Options.Clouded.Auth.Identity.Machine!.ColumnIdentity">
                Name
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                T="MachineDictionary"
                SortLabel="@Options.Clouded.Auth.Identity.Machine!.ColumnDescription">
                Description
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                T="MachineDictionary"
                SortLabel="@Options.Clouded.Auth.Identity.Machine!.ColumnType">
                Type
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                T="MachineDictionary"
                SortLabel="@Options.Clouded.Auth.Identity.Machine!.ColumnExpiresIn">
                Expires in
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                T="MachineDictionary"
                SortLabel="@Options.Clouded.Auth.Identity.Machine!.ColumnBlocked">
                Blocked
            </MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context[Options.Clouded.Auth.Identity.Machine!.ColumnIdentity]</MudTd>
        <MudTd DataLabel="Description">@context[Options.Clouded.Auth.Identity.Machine!.ColumnDescription]</MudTd>
        <MudTd DataLabel="Type">@context[Options.Clouded.Auth.Identity.Machine!.ColumnType]</MudTd>
        <MudTd DataLabel="Expires in">@context[Options.Clouded.Auth.Identity.Machine!.ColumnExpiresIn]</MudTd>
        <MudTd DataLabel="Blocked">@context[Options.Clouded.Auth.Identity.Machine!.ColumnBlocked]</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>

@code {
    private MudTable<MachineDictionary>? _tableReference;
    private string? _tableSearch;
    private IEnumerable<ColumnResult> _filterableColumns = new List<ColumnResult>();
    private Dictionary<string, object?> _filterValues = new();

    protected override void OnInitialized()
    {
        var _machineColumns = MachineDataSource
            .GetEntityColumns()
            .Where
            (
                column =>
                    column.Name != Options.Clouded.Auth.Identity.User.ColumnPassword
            );

        _filterableColumns = _machineColumns.OnlyFilterableFields();
        foreach (var filterableColumn in _filterableColumns)
        {
            _filterValues[filterableColumn.GetKey()] = null;
        }
    }

    private void Create()
    {
        NavigationManager.NavigateTo("/management/machines/create");
    }

    private Task<TableData<MachineDictionary>> LoadData(TableState state)
    {
        var data = MachineDataSource
            .EntitiesPaginated
            (
                state.Page,
                state.PageSize,
                _tableSearch,
                filter: (_filterableColumns, _filterValues),
                state.SortLabel,
                state.SortDirection == SortDirection.Descending
            );

        return Task.FromResult
            (
                new TableData<MachineDictionary>
                {
                    TotalItems = (int)data.PageInfo.TotalElements,
                    Items = data.Items
                }
            );
    }

    private void OnSearch(string? text)
    {
        _tableSearch = text?.Length < 3 ? null : text;
        _tableReference?.ReloadServerData();
    }

    private void RowClick(TableRowClickEventArgs<MachineDictionary> args) =>
        NavigationManager.NavigateTo($"/management/machines/{args.Item.Id}");

    private void OnValueChange(Dictionary<string, object?> value)
    {
        _filterValues = value;
        _tableReference?.ReloadServerData();
    }

}