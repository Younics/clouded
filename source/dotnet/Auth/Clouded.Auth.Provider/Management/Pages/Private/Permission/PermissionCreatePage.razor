@page "/management/permissions/create"
@using Clouded.Auth.Provider.Options
@using Clouded.Core.DataSource.Shared
@using Clouded.Auth.Provider.DataSources.Interfaces
@using Clouded.Auth.Provider.Dictionaries
@using Clouded.Auth.Provider.Management.Enums
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject ApplicationOptions Options
@inject IPermissionDataSource PermissionDataSource

@if (_initiallyLoaded)
{
    <MudGrid Spacing="4">
        <MudItem xs="12">
            <MudText Typo="Typo.h2">Create Permission</MudText>
        </MudItem>
        <MudItem xs="12">
            <MudPaper Class="pa-2">
                <MudText Class="mud-background rounded px-4 py-1 mb-2" Typo="Typo.h6">Permission attributes</MudText>
                <GenericFields
                  TDictionary="PermissionDictionary"
                    Mode="EGenericFieldMode.Create"
                    Columns="@_permissionColumns.Where(column => column.Name != Options.Clouded.Auth.Identity.Permission!.ColumnId)"
                    @bind-Data="_permission"/>
            </MudPaper>
        </MudItem>

        <MudItem Class="d-flex justify-between" xs="12">
            <MudButton
                HtmlTag="a"
                Href="/management/permissions"
                StartIcon="@Icons.Material.Filled.KeyboardArrowLeft"
                Variant="Variant.Filled"
                Color="Color.Tertiary">
                Cancel
            </MudButton>
            <MudButton
                OnClick="Create"
                StartIcon="@Icons.Material.Filled.Check"
                ButtonType="ButtonType.Submit"
                Variant="Variant.Filled"
                Color="Color.Tertiary"
                Class="ml-auto">
                Create
            </MudButton>
        </MudItem>
    </MudGrid>
}

@code {
    private bool _initiallyLoaded;

    private IEnumerable<ColumnResult> _permissionColumns = null!;
    private PermissionDictionary _permission = new();

    protected override void OnInitialized()
    {
        _permissionColumns = PermissionDataSource
            .GetEntityColumns()
            .Where
            (
                column =>
                    column.Name != Options.Clouded.Auth.Identity.Permission!.ColumnId
            );

        _initiallyLoaded = true;
    }

    private void Create()
    {
        PermissionDataSource.EntityCreate(_permission);

        Snackbar.Add("Created", Severity.Success);
        NavigationManager.NavigateTo("/management/permissions");
    }

}